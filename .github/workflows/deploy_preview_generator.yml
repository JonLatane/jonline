name: Deploy Preview Generator

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        description: 'DockerHub username for CD'
        required: true
      DOCKERHUB_TOKEN:
        description: 'DockerHub access token for CD'
        required: true

jobs:
  build_and_deliver:
    name: Build and Deliver
    runs-on: ubuntu-latest
    env:
      BE_VERSION:
      SHA_TO_DEPLOY: ${{ github.event.inputs.sha || github.sha }}
    steps:
    - uses: actions/checkout@v3

    - name: Extract Versioning Data
      id: vars
      run: |-
        echo "be_version=$(cat backend/Cargo.toml | grep 'version =' | sed -n 1p | awk '{print $3;}' | sed 's/"//g')" >> $GITHUB_OUTPUT
        echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Check Versioning Data
      run: echo ${{ steps.vars.outputs.be_version }}-${{ steps.vars.outputs.sha_short }}

    - uses: docker/setup-buildx-action@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - uses: arduino/setup-protoc@v2

    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # - working-directory: backend
    #   run: cargo test --all-features
    - working-directory: backend
      run: cargo build --release

    - name: Rename Rust binaries for Dockerfiles
      run: >-
           mv backend/target/release/jonline backend/target/release/jonline__server_release &&
           mv backend/target/release/delete_expired_tokens backend/target/release/delete_expired_tokens__server_release &&
           mv backend/target/release/delete_unowned_media backend/target/release/delete_unowned_media__server_release &&
           mv backend/target/release/generate_preview_images backend/target/release/generate_preview_images__server_release &&
           mv backend/target/release/delete_preview_images backend/target/release/delete_preview_images__server_release &&
           mv backend/target/release/set_permission backend/target/release/set_permission__server_release

    - name: Build and push jonline_preview_generator image
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/jonline_preview_generator:${{ steps.vars.outputs.be_version }}-${{ steps.vars.outputs.sha_short }}
        context: .
        file: ./deploys/docker/preview_generator/Dockerfile
        platforms: linux/amd64,linux/arm64

  # Note that the deploy expects that backend/Cargo.toml and deploys/k8s/server.yaml
  # have the same version number.
  deploy_to_getjonline:
    name: Deploy to GetJ.online
    needs: build_and_deliver
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Extract Versioning Data
      id: vars
      run: |-
        echo "be_version=$(cat backend/Cargo.toml | grep 'version =' | sed -n 1p | awk '{print $3;}' | sed 's/"//g')" >> $GITHUB_OUTPUT
        echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Update deploys/k8s/preview_generator.yaml to use ${{ steps.vars.outputs.be_version }}-${{ steps.vars.outputs.sha_short }}
      run: sed -i 's|${{ steps.vars.outputs.be_version }}|${{ steps.vars.outputs.be_version }}-${{ steps.vars.outputs.sha_short }}|' deploys/k8s/preview_generator.yaml

    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 jonline-be

    - name: Deploy to GetJ.online via DigitalOcean Kubernetes
      run: kubectl apply -f deploys/k8s/preview_generator.yaml -n getjonline

  # Note that the deploy expects that backend/Cargo.toml and deploys/k8s/server.yaml
  # have the same version number.
  deploy_to_jonlineio:
    name: Deploy to Jonline.io
    needs: build_and_deliver
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Extract Versioning Data
      id: vars
      run: |-
        echo "be_version=$(cat backend/Cargo.toml | grep 'version =' | sed -n 1p | awk '{print $3;}' | sed 's/"//g')" >> $GITHUB_OUTPUT
        echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Update deploys/k8s/preview_generator.yaml to use ${{ steps.vars.outputs.be_version }}-${{ steps.vars.outputs.sha_short }}
      run: sed -i 's|${{ steps.vars.outputs.be_version }}|${{ steps.vars.outputs.be_version }}-${{ steps.vars.outputs.sha_short }}|' deploys/k8s/preview_generator.yaml

    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 jonline-be

    - name: Deploy to Jonline.io via DigitalOcean Kubernetes
      run: kubectl apply -f deploys/k8s/preview_generator.yaml -n jonline
