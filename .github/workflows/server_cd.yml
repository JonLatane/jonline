name: Server CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        description: 'DockerHub username for CD'
        required: true
      DOCKERHUB_TOKEN:
        description: 'DockerHub access token for CD'
        required: true

jobs:
  build_and_deploy_image:
    name: Build and Deliver
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Extract Versioning Data
      id: vars
      run: |-
        echo "be_version=$(cat backend/Cargo.toml | grep 'version =' | sed -n 1p | awk '{print $3;}' | sed 's/"//g')" >> $GITHUB_OUTPUT
        echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    # - name: Check Versioning Data
    #   run: echo ${{ steps.vars.outputs.be_version }}-${{ steps.vars.outputs.sha_short }}
    - name: Store SHA for release ${{ steps.vars.outputs.be_version }}-${{ steps.vars.outputs.sha_short }}
      run: echo ${{ steps.vars.outputs.sha_short }} > deploys/docker/continuous_delivery_hash

    - uses: docker/setup-buildx-action@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - uses: arduino/setup-protoc@v2
    - uses: subosito/flutter-action@v2
    - uses: actions/setup-node@v3
      with:
        node-version: 18.x

    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - run: npm install --global yarn
    - working-directory: frontends/tamagui
      run: yarn install
    - working-directory: frontends/tamagui
      run: yarn vercel:install
    - working-directory: frontends/tamagui
      run: yarn tsc
    - working-directory: frontends/tamagui
      run: yarn web:prod:export

    - working-directory: frontends/flutter
      run: flutter pub get
    # - working-directory: frontends/flutter
    #   run: flutter test
    - working-directory: frontends/flutter
      run: flutter build web --web-renderer canvaskit --release --base-href /flutter/

    # - working-directory: backend
    #   run: cargo test --all-features
    - working-directory: backend
      run: cargo build --release

    - name: Rename Rust binaries for Dockerfiles
      run: >-
           mv backend/target/release/jonline backend/target/release/jonline__server_release &&
           mv backend/target/release/delete_expired_tokens backend/target/release/delete_expired_tokens__server_release &&
           mv backend/target/release/delete_unowned_media backend/target/release/delete_unowned_media__server_release &&
           mv backend/target/release/generate_preview_images backend/target/release/generate_preview_images__server_release &&
           mv backend/target/release/delete_preview_images backend/target/release/delete_preview_images__server_release &&
           mv backend/target/release/set_permission backend/target/release/set_permission__server_release

    - name: Build and push jonline image
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/jonline:${{ steps.vars.outputs.be_version }}-${{ steps.vars.outputs.sha_short }}
        context: .
        file: ./deploys/docker/server/Dockerfile
        platforms: linux/amd64,linux/arm64
