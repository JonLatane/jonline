apiVersion: v1
kind: Service
metadata:
  name: jonline
  labels:
    app: jonline
spec:
  type: LoadBalancer
  selector:
    app: jonline
  ports:
    - name: grpc
      protocol: TCP
      port: 27707
      targetPort: 27707
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jonline
  labels:
    app: jonline
spec:
  replicas: 2
  selector:
    matchLabels:
      app: jonline
  template:
    metadata:
      labels:
        app: jonline
    spec:
      containers:
        - image: docker.io/jonlatane/jonline:0.1.16
          name: jonline
          env:
            - name: DATABASE_URL
              value: postgres://admin:secure_password1@jonline-postgres/jonline
            - name: TLS_KEY
              valueFrom:
                secretKeyRef:
                  name: jonline-generated-tls
                  key: tls.key
                  optional: true
            - name: TLS_CERT
              valueFrom:
                secretKeyRef:
                  name: jonline-generated-tls
                  key: tls.crt
                  optional: true
            - name: CA_CERT
              valueFrom:
                configMapKeyRef:
                  name: jonline-generated-ca
                  key: ca.crt
                  optional: true
          ports:
            - containerPort: 27707
              protocol: TCP
              name: jonline
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: jonline-expired-token-cleanup
spec:
  schedule: "0 0 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: jonline-expired-token-cleanup
            image: docker.io/jonlatane/jonline:0.1.16
            imagePullPolicy: IfNotPresent
            env:
              - name: DATABASE_URL
                value: postgres://admin:secure_password1@jonline-postgres/jonline
            command:
            - /opt/jonline_refresh_token_cleanup
          restartPolicy: Never
