syntax = "proto3";

package jonline;

import "google/protobuf/empty.proto";
// import "google/protobuf/timestamp.proto";

import "authentication.proto";
import "posts.proto";
import "post_query.proto";
import "users.proto";
import "federation.proto";
import "admin.proto";

// Authenticated calls require a Refresh Token in request metadata, retrieved from
// the RefreshToken RPC. The CreateAccount or Login RPC should first be used to fetch
// (and store) an Authentication Token to use when calling RefreshToken.
service Jonline {
  // Get the version (from Cargo) of the Jonline service. Publicly accessible.
  rpc GetServiceVersion(google.protobuf.Empty) returns (GetServiceVersionResponse) {}

  // (TODO) Gets the Jonline server's configuration. Publicly accessible.
  rpc GetServerConfiguration(google.protobuf.Empty) returns (ServerConfiguration) {}

  // Gets Users. Publicly accessible *or* authenticated.
  // Unauthenticated calls only return Users of GLOBAL_PUBLIC visibility.
  rpc GetUsers(GetUsersRequest) returns (GetUsersResponse) {}

  // Gets Posts. Publicly accessible *or* authenticated.
  // Unauthenticated calls only return Posts of GLOBAL_PUBLIC visibility.
  rpc GetPosts(GetPostsRequest) returns (Posts) {}
  // (TODO) Query for Posts. Publicly accessible *or* authenticated.
  // Eventually I should replace GetPosts with this.
  // Unauthenticated calls only return Posts of GLOBAL_PUBLIC visibility.
  rpc QueryPosts(PostQuery) returns (Posts) {}

  // Creates a user account and provides an auth token. Publicly accessible.
  rpc CreateAccount(CreateAccountRequest) returns (AuthTokenResponse) {}
  // Logs in a user and provides an Auth Token (along with a Refresh Token).
  rpc Login(LoginRequest) returns (AuthTokenResponse) {}
  // Gets a new Refresh Token (given an Auth Token).
  rpc RefreshToken(RefreshTokenRequest) returns (ExpirableToken) {}

  // Gets the current user. Authenticated.
  rpc GetCurrentUser(google.protobuf.Empty) returns (User) {}

  // Creates a Post. Authenticated.
  rpc CreatePost(CreatePostRequest) returns (Post) {}
  // (TODO) Updates a Post. Authenticated.
  rpc UpdatePost(Post) returns (Post) {}
  // (TODO) (Soft) deletes a Post. Returns the deleted version of the Post. Authenticated.
  rpc DeletePost(Post) returns (Post) {}

  // (TODO) Configure the server (i.e. the response to GetServerConfiguration). Authenticated.
  // Requires ADMIN permissions.
  rpc ConfigureServer(ServerConfiguration) returns (ServerConfiguration) {}
}
