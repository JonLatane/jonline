syntax = "proto3";

package jonline;

import "google/protobuf/timestamp.proto";

import "visibility_moderation.proto";

// A Jonline `Media` message represents a single media item, such as a photo or video.
// Media data is deliberately *not returnable from the gRPC API*. Instead, the client
// should fetch media from `http[s]://my.jonline.instance/media/{id}`.
//
// Media items may be created with a HTTP POST to `http[s]://my.jonline.instance/media`
// along with an "Authorization" header (your access token) and a "Content-Type" header.
// On success, the endpoint will return the media ID in plaintext.
//
// `POST /media` supports the following headers:
// - `Content-Type` - The MIME content type of the media item.
// - `Filename` - An optional title for the media item.
// - `Authorization` - Jonline Access Token for the user. Required, but may be supplied in `Cookies`.
// - `Cookies` - Standard web cookies. The `jonline_access_token` cookie may be used for authentication.
//
// `GET /media` supports the following:
// - **Headers**:
//     - `Authorization` - Jonline Access Token for the user. May also be supplied in `Cookies` or via query parameter.
//     - `Cookies` - Standard web cookies. The `jonline_access_token` cookie may be used for authentication.
// - **Query Parameters**:
//     - `authorization` - Jonline Access Token for the user. May also be supplied in the `Cookies` or `Authorization` headers.
// - Fetching media without authentication requires that it has `GLOBAL_PUBLIC` visibility.
message Media {
  // The ID of the media item.
  string id = 1;
  // The ID of the user who created the media item.
  optional string user_id = 2;
  // The MIME content type of the media item.
  string content_type = 3;
  // An optional title for the media item.
  optional string name = 4;
  // An optional description for the media item.
  optional string description = 5;
  // Visibility of the media item.
  Visibility visibility = 6;
  // Moderation of the media item.
  Moderation moderation = 7;
  // Indicates the media was generated by the server rather than uploaded manually by a user.
  bool generated = 8;
  // Media is generally stored as-is on upload.
  // When background jobs process and compress the media, this flag is set to true.
  bool processed = 9;
  google.protobuf.Timestamp created_at = 15;
  google.protobuf.Timestamp updated_at = 16;
}

// A reference to a media item, designed to be included in other messages as a reference.
// Contains the bare minimum data needed to fetch media via the HTTP API and render it,
// and the media item's name (for alt text usage).
message MediaReference {
  string content_type = 1;
  string id = 2;
  optional string name = 3;
}

// Valid GetMediaRequest formats:
// - `{user_id: "123"}` - Gets the media of the given user that the current user can see. IE:
//     - *all* of the current user's own media
//     - `GLOBAL_PUBLIC` media for the user if the current user is not logged in.
//     - `SERVER_PUBLIC` media for the user if the current user is logged in.
//     - `LIMITED` media for the user if the current user is following the user.
// - `{media_id: "123"}` - Gets the media with the given ID, if visible to the current user.
message GetMediaRequest {
  // Returns the single media item with the given ID.
  optional string media_id = 1;
  // Returns all media items for the given user.
  optional string user_id = 2;

  uint32 page = 11;
}

message GetMediaResponse {
  repeated Media media = 1;
  bool has_next_page = 2;
}
