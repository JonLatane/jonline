syntax = "proto3";

package jonline;

import "visibility_moderation.proto";
import "permissions.proto";

// Confuguration for a Jonline server instance.
message ServerConfiguration {
  // The name of the server.
  optional ServerInfo server_info = 1;

  repeated Permission anonymous_user_permissions = 10;
  // Default user permissions given to a user. Valid values are VIEW_POSTS,
  // CREATE_POSTS, PUBLISH_POSTS_GLOBALLY, VIEW_EVENTS, CREATE_EVENTS, and
  // PUBLISH_EVENTS_GLOBALLY. Users with MODERATE_USERS permission can
  // grant these permissions to other users. Only users with ADMIN can grant
  // MODERATE_USERS, MODERATE_POSTS, and MODERATE_EVENTS.
  repeated Permission default_user_permissions = 11;
  repeated Permission basic_user_permissions = 12;

  // If default visibility is GLOBAL_PUBLIC, default_user_permissions *must*
  // contain PUBLISH_USERS_GLOBALLY.
  FeatureSettings people_settings = 20;
  // If default visibility is GLOBAL_PUBLIC, default_user_permissions *must*
  // contain PUBLISH_GROUPS_GLOBALLY.
  FeatureSettings group_settings = 21;
  // If default visibility is GLOBAL_PUBLIC, default_user_permissions *must*
  // contain PUBLISH_POSTS_GLOBALLY.
  FeatureSettings post_settings = 22;
  // If default visibility is GLOBAL_PUBLIC, default_user_permissions *must*
  // contain PUBLISH_EVENTS_GLOBALLY.
  FeatureSettings event_settings = 23;

  // Strategy when a user sets their visibility to PRIVATE. Defaults to ACCOUNT_IS_FROZEN.
  PrivateUserStrategy private_user_strategy = 100;

  // Allows admins to enable/disable creating accounts and logging in.
  // Eventually, external auth too hopefully!
  repeated AuthenticationFeature authentication_features = 101;

}

enum AuthenticationFeature {
  AUTHENTICATION_FEATURE_UNKNOWN = 0;
  // Users can sign up for an account.
  CREATE_ACCOUNT = 1;
  // Users can sign in with an existing account.
  LOGIN = 2;
}

message FeatureSettings {
  // Hide the Posts or Events tab from the user with this flag.
  bool visible = 1;
  // Only UNMODERATED and PENDING are valid.
  // When UNMODERATED, user reports may transition status to PENDING.
  // When PENDING, users' SERVER_PUBLIC or GLOBAL_PUBLIC posts will not
  // be visible until a moderator approves them. LIMITED visiblity
  // posts are always visible to targeted users (who have not blocked 
  // the author) regardless of default_moderation.
  Moderation default_moderation = 2;
  // Only SERVER_PUBLIC and GLOBAL_PUBLIC are valid. GLOBAL_PUBLIC is only valid
  // if default_user_permissions contains GLOBALLY_PUBLISH_[USERS|GROUPS|POSTS|EVENTS] 
  // as appropriate.
  Visibility default_visibility = 3;
  optional string custom_title = 4;
}

enum PrivateUserStrategy {
  // PRIVATE Users can't see other Users (only PUBLIC_GLOBAL Visilibity Users/Posts/Events).
  // Other users can't see them.
  ACCOUNT_IS_FROZEN = 0;
  // Users can see other users they follow, but only PUBLIC_GLOBAL Visilibity Posts/Events.
  // Other users can't see them.
  LIMITED_CREEPINESS = 1;
  // Users can see other users they follow, including their PUBLIC_SERVER Posts/Events,
  // Other users can't see them.
  LET_ME_CREEP_ON_PPL = 2;
}

message ServerInfo {
  optional string name = 1;
  optional string short_name = 2;
  optional string description = 3;
  optional string privacy_policy_link = 4;
  optional string about_link = 5;
  optional WebUserInterface web_user_interface = 6;
  optional ServerColors colors = 7;
  optional bytes logo = 8;
}

// Offers a choice of web UIs. All
enum WebUserInterface {
  // Uses Flutter Web. Loaded from /app.
  FLUTTER_WEB = 0;
  // Uses Handlebars templates. Will probably be discontinued.
  HANDLEBARS_TEMPLATES = 1;
  // React UI using Tamagui (a React Native UI library).
  REACT_TAMAGUI = 2;
}

// Color in ARGB hex format (i.e 0xAARRGGBB).
// Clients may override/modify colors that cause poor UX.
message ServerColors {
  // App Bar/primary accent color.
  optional uint32 primary = 1;
  // Nav/secondary accent color.
  optional uint32 navigation = 2;
  // Color used on author of a post in discussion threads for it.
  optional uint32 author = 3;
  // Color used on author for admin posts.
  optional uint32 admin = 4;
  // Color used on author for moderator posts.
  optional uint32 moderator = 5;
}