syntax = "proto3";

package jonline;

import "visibility_moderation.proto";
import "permissions.proto";

// Configuration for a Jonline server instance.
message ServerConfiguration {
  // The name, description, logo, color scheme, etc. of the server.
  optional ServerInfo server_info = 1;

  // Permissions for a user who isn't logged in to the server. Allows
  // admins to disable certain features for anonymous users. Valid values are 
  // `VIEW_USERS`, `VIEW_GROUPS`, `VIEW_POSTS`, and `VIEW_EVENTS`.
  repeated Permission anonymous_user_permissions = 10;
  // Default user permissions given to a new user. Users with `MODERATE_USERS` permission can also 
  // grant/revoke these permissions for others. Valid values are 
  // `VIEW_USERS`, `PUBLISH_USERS_LOCALLY`, `PUBLISH_USERS_GLOBALLY`, 
  // `VIEW_GROUPS`, `CREATE_GROUPS`, `PUBLISH_GROUPS_LOCALLY`, `PUBLISH_GROUPS_GLOBALLY`, `JOIN_GROUPS`, 
  // `VIEW_POSTS`, `CREATE_POSTS`, `PUBLISH_POSTS_LOCALLY`, `PUBLISH_POSTS_GLOBALLY`, 
  // `VIEW_EVENTS`, `CREATE_EVENTS`, `PUBLISH_EVENTS_LOCALLY`, and `PUBLISH_EVENTS_GLOBALLY`.
  repeated Permission default_user_permissions = 11;
  // Permissions grantable by a user with the `GRANT_BASIC_PERMISSIONS` permission. Valid values are 
  // `VIEW_USERS`, `PUBLISH_USERS_LOCALLY`, `PUBLISH_USERS_GLOBALLY`, 
  // `VIEW_GROUPS`, `CREATE_GROUPS`, `PUBLISH_GROUPS_LOCALLY`, `PUBLISH_GROUPS_GLOBALLY`, `JOIN_GROUPS`, 
  // `VIEW_POSTS`, `CREATE_POSTS`, `PUBLISH_POSTS_LOCALLY`, `PUBLISH_POSTS_GLOBALLY`, 
  // `VIEW_EVENTS`, `CREATE_EVENTS`, `PUBLISH_EVENTS_LOCALLY`, and `PUBLISH_EVENTS_GLOBALLY`.
  repeated Permission basic_user_permissions = 12;

  // If default visibility is `GLOBAL_PUBLIC`, default_user_permissions *must*
  // contain `PUBLISH_USERS_GLOBALLY`.
  FeatureSettings people_settings = 20;
  // If default visibility is `GLOBAL_PUBLIC`, default_user_permissions *must*
  // contain `PUBLISH_GROUPS_GLOBALLY`.
  FeatureSettings group_settings = 21;
  // If default visibility is `GLOBAL_PUBLIC`, default_user_permissions *must*
  // contain `PUBLISH_POSTS_GLOBALLY`.
  PostSettings post_settings = 22;
  // If default visibility is `GLOBAL_PUBLIC`, default_user_permissions *must*
  // contain `PUBLISH_EVENTS_GLOBALLY`.
  FeatureSettings event_settings = 23;
  // If default visibility is `GLOBAL_PUBLIC`, default_user_permissions *must*
  // contain `PUBLISH_EVENTS_GLOBALLY`.
  FeatureSettings media_settings = 24;

  // (NEW/IN TESTING) Useful for setting your Jonline instance up to run underneath a CDN.
  // By default, the web client uses `window.location.hostname` to determine the backend server.
  // If set, the web client will use this value instead. NOTE: Only applies to Tamagui web client for now.
  optional string default_client_domain = 25;

  // Strategy when a user sets their visibility to `PRIVATE`. Defaults to `ACCOUNT_IS_FROZEN`.
  PrivateUserStrategy private_user_strategy = 100;

  // Allows admins to enable/disable creating accounts and logging in.
  // Eventually, external auth too hopefully!
  repeated AuthenticationFeature authentication_features = 101;

}

enum AuthenticationFeature {
  AUTHENTICATION_FEATURE_UNKNOWN = 0;
  // Users can sign up for an account.
  CREATE_ACCOUNT = 1;
  // Users can sign in with an existing account.
  LOGIN = 2;
}

message FeatureSettings {
  // Hide the Posts or Events tab from the user with this flag.
  bool visible = 1;
  // Only `UNMODERATED` and `PENDING` are valid.
  // When `UNMODERATED`, user reports may transition status to `PENDING`.
  // When `PENDING`, users' SERVER_PUBLIC or `GLOBAL_PUBLIC` posts will not
  // be visible until a moderator approves them. `LIMITED` visiblity
  // posts are always visible to targeted users (who have not blocked 
  // the author) regardless of default_moderation.
  Moderation default_moderation = 2;
  // Only `SERVER_PUBLIC` and `GLOBAL_PUBLIC` are valid. `GLOBAL_PUBLIC` is only valid
  // if default_user_permissions contains `GLOBALLY_PUBLISH_[USERS|GROUPS|POSTS|EVENTS]` 
  // as appropriate.
  Visibility default_visibility = 3;
  optional string custom_title = 4;
}

message PostSettings {
  // Hide the Posts or Events tab from the user with this flag.
  bool visible = 1;
  // Only `UNMODERATED` and `PENDING` are valid.
  // When `UNMODERATED`, user reports may transition status to `PENDING`.
  // When `PENDING`, users' SERVER_PUBLIC or `GLOBAL_PUBLIC` posts will not
  // be visible until a moderator approves them. `LIMITED` visiblity
  // posts are always visible to targeted users (who have not blocked 
  // the author) regardless of default_moderation.
  Moderation default_moderation = 2;
  // Only `SERVER_PUBLIC` and `GLOBAL_PUBLIC` are valid. `GLOBAL_PUBLIC` is only valid
  // if default_user_permissions contains `GLOBALLY_PUBLISH_[USERS|GROUPS|POSTS|EVENTS]` 
  // as appropriate.
  Visibility default_visibility = 3;
  optional string custom_title = 4;
  // Controls whether replies are shown in the UI. Note that users' ability to reply
  // is controlled by the `REPLY_TO_POSTS` permission.
  bool enable_replies = 5;
}

enum PrivateUserStrategy {
  // `PRIVATE` Users can't see other Users (only `PUBLIC_GLOBAL` Visilibity Users/Posts/Events).
  // Other users can't see them.
  ACCOUNT_IS_FROZEN = 0;
  // Users can see other users they follow, but only `PUBLIC_GLOBAL` Visilibity Posts/Events.
  // Other users can't see them.
  LIMITED_CREEPINESS = 1;
  // Users can see other users they follow, including their `PUBLIC_SERVER` Posts/Events.
  // Other users can't see them.
  LET_ME_CREEP_ON_PPL = 2;
}

message ServerInfo {
  optional string name = 1;
  optional string short_name = 2;
  optional string description = 3;
  optional string privacy_policy_link = 4;
  optional string about_link = 5;
  optional WebUserInterface web_user_interface = 6;
  optional ServerColors colors = 7;
  optional bytes logo = 8;
}

// Offers a choice of web UIs. All
enum WebUserInterface {
  // Uses Flutter Web. Loaded from /app.
  FLUTTER_WEB = 0;
  // Uses Handlebars templates. Deprecated; will revert to Tamagui UI if chosen.
  HANDLEBARS_TEMPLATES = 1 [deprecated = true];
  // React UI using Tamagui (a React Native UI library).
  REACT_TAMAGUI = 2;
}

// Color in ARGB hex format (i.e `0xAARRGGBB`).
message ServerColors {
  // App Bar/primary accent color.
  optional uint32 primary = 1;
  // Nav/secondary accent color.
  optional uint32 navigation = 2;
  // Color used on author of a post in discussion threads for it.
  optional uint32 author = 3;
  // Color used on author for admin posts.
  optional uint32 admin = 4;
  // Color used on author for moderator posts.
  optional uint32 moderator = 5;
}