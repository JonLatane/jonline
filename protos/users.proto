syntax = "proto3";

package jonline;

import "google/protobuf/timestamp.proto";
import "permissions.proto";
import "visibility_moderation.proto";

message User {
  string id = 1;
  string username = 2;
  optional ContactMethod email = 3;
  optional ContactMethod phone = 4;
  repeated Permission permissions = 5;
  optional bytes avatar = 6;
  // User visibility is a bit different from Post visibility.
  // LIMITED means the user can only be seen by users they follow
  // (as opposed to Posts' individualized visibilities).
  // PRIVATE visibility means no one can see the user
  Visibility visibility = 7;
  Moderation moderation = 8;
  // Only PENDING or UNMODERATED are valid.
  Moderation default_follow_moderation = 9;
  optional int32 follower_count = 10;
  optional int32 following_count = 11;
  // Presence indicates the current user is following
  // or has a pending follow request for this user.
  optional Follow current_user_follow = 12;
  // Presence indicates this user is following or has
  // a pending follow request for the current user.
  optional Follow target_current_user_follow = 13;
  google.protobuf.Timestamp created_at = 14;
  optional google.protobuf.Timestamp updated_at = 15;
}

message Follow {
  string user_id = 1;
  string target_user_id = 2;
  Moderation target_user_moderation = 3;
  google.protobuf.Timestamp created_at = 4;
  optional google.protobuf.Timestamp updated_at = 5;
}

message ContactMethod {
  optional string value = 1;
  Visibility visibility = 2;
}

message GetUsersRequest {
  optional string username = 1;
  optional string user_id = 2;
  optional string group_id = 3;
  // optional string email = 2;
  // optional string phone = 3;
  optional int32 page = 99;
  UserListingType listing_type = 100;
}

enum UserListingType {
  EVERYONE = 0;
  FOLLOWING = 1;
  FRIENDS = 2;
  FOLLOWERS = 3;
  FOLLOW_REQUESTS = 4;
  // This listing type corresponds to UserMemberships rather than Users.
  GROUP_REQUESTS = 5;
}

message GetUsersResponse {
  repeated User users = 1;
  bool has_next_page = 2;
}
