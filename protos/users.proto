syntax = "proto3";

package jonline;
import "permissions.proto";
import "visibility_moderation.proto";

message User {
  string id = 1;
  string username = 2;
  optional ContactMethod email = 3;
  optional ContactMethod phone = 4;
  repeated Permission permissions = 5;
  optional bytes avatar = 6;
  // User visibility is a bit different from Post visibility.
  // LIMITED means the user can only be seen by users they follow
  // (as opposed to Posts' individualized visibilities).
  // PRIVATE visibility means no one can see the user
  Visibility visibility = 7;
  // Only PENDING or UNMODERATED are valid.
  Moderation default_follow_moderation = 8;
  optional Follow follow_relationship = 9;
}

// To allow LIMITED visibility users to make friends, anyone
// can send a FollowRequest with their username. If the target
// has LIMITED visiblity, the response should be identical to a
// "user_not_found" error. However, the follow request will still
// be created to await the LIMITED user's approval.
message Follow {
  string user_id = 1;
  string target_user_id = 2;
  Moderation target_user_moderation = 3;
}

message ContactMethod {
  optional string value = 1;
  Visibility visibility = 2;
}

message GetUsersRequest {
  optional string username = 1;
  optional string email = 2;
  optional string phone = 3;
  optional string user_id = 4;
  optional int32 page = 5;
  UserListingType listing_type = 6;
}

enum UserListingType {
  EVERYONE = 0;
  FOLLOWING = 1;
  FOLLOWERS = 2;
  FRIENDS = 3;
  FOLLOW_REQUESTS = 4;
}

message GetUsersResponse {
  repeated User users = 1;
  bool has_next_page = 2;
}
